<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
	http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.1.xsd
	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd"
	default-lazy-init="true" default-merge="true">

	<!-- 启动对@AspectJ注解的支持 缺少：aspectjweaver和aspectjrt包。则无法加载 -->
	<aop:aspectj-autoproxy />

	<context:annotation-config />
	<context:component-scan base-package="spring.dao3"></context:component-scan>




	<!-- 引入属性文件 -->
	<context:property-placeholder location="classpath:config/db_dao.properties" />
	
	

	<bean id="dataSourceOne" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="${dbOne.jdbc.driverClass}" />
		<property name="jdbcUrl" value="${dbOne.jdbc.url}" />
		<property name="user" value="${dbOne.jdbc.user}" />
		<property name="password" value="${dbOne.jdbc.password}" />
		<property name="initialPoolSize" value="${dbOne.jdbc.initialPoolSize}" />
		<property name="minPoolSize" value="${dbOne.jdbc.minPoolSize}" />
		<property name="maxPoolSize" value="${dbOne.jdbc.maxPoolSize}" />
	</bean>

	<bean id="dataSourceTwo" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="${dbTwo.jdbc.driverClass}" />
		<property name="jdbcUrl" value="${dbTwo.jdbc.url}" />
		<property name="user" value="${dbTwo.jdbc.user}" />
		<property name="password" value="${dbTwo.jdbc.password}" />
		<property name="initialPoolSize" value="${dbTwo.jdbc.initialPoolSize}" />
		<property name="minPoolSize" value="${dbTwo.jdbc.minPoolSize}" />
		<property name="maxPoolSize" value="${dbTwo.jdbc.maxPoolSize}" />
	</bean>

	<bean id="dataSource0" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${db.jdbc.driverClass.0}" />
		<property name="jdbcUrl" value="${db.jdbc.url.0}" />
		<property name="user" value="${db.jdbc.user.0}" />
		<property name="password" value="${db.jdbc.password.0}" />
		<property name="initialPoolSize" value="${db.jdbc.initialPoolSize.0}" />
		<property name="minPoolSize" value="${db.jdbc.minPoolSize.0}" />
		<property name="maxPoolSize" value="${db.jdbc.maxPoolSize.0}" />
	</bean>

	<bean id="dataSource1" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${db.jdbc.driverClass.1}" />
		<property name="jdbcUrl" value="${db.jdbc.url.1}" />
		<property name="user" value="${db.jdbc.user.1}" />
		<property name="password" value="${db.jdbc.password.1}" />
		<property name="initialPoolSize" value="${db.jdbc.initialPoolSize.1}" />
		<property name="minPoolSize" value="${db.jdbc.minPoolSize.1}" />
		<property name="maxPoolSize" value="${db.jdbc.maxPoolSize.1}" />
	</bean>

	<bean id="dataSource2" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${db.jdbc.driverClass.2}" />
		<property name="jdbcUrl" value="${db.jdbc.url.2}" />
		<property name="user" value="${db.jdbc.user.2}" />
		<property name="password" value="${db.jdbc.password.2}" />
		<property name="initialPoolSize" value="${db.jdbc.initialPoolSize.2}" />
		<property name="minPoolSize" value="${db.jdbc.minPoolSize.2}" />
		<property name="maxPoolSize" value="${db.jdbc.maxPoolSize.2}" />
	</bean>

	<bean id="dataSource3" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${db.jdbc.driverClass.3}" />
		<property name="jdbcUrl" value="${db.jdbc.url.3}" />
		<property name="user" value="${db.jdbc.user.3}" />
		<property name="password" value="${db.jdbc.password.3}" />
		<property name="initialPoolSize" value="${db.jdbc.initialPoolSize.3}" />
		<property name="minPoolSize" value="${db.jdbc.minPoolSize.3}" />
		<property name="maxPoolSize" value="${db.jdbc.maxPoolSize.3}" />
	</bean>

	<bean id="dataSource4" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${db.jdbc.driverClass.3}" />
		<property name="jdbcUrl" value="${db.jdbc.url.3}" />
		<property name="user" value="${db.jdbc.user.3}" />
		<property name="password" value="${db.jdbc.password.3}" />
		<property name="initialPoolSize" value="${db.jdbc.initialPoolSize.3}" />
		<property name="minPoolSize" value="${db.jdbc.minPoolSize.3}" />
		<property name="maxPoolSize" value="${db.jdbc.maxPoolSize.3}" />
	</bean>

	<bean id="dynamicDataSource" class="spring.dao3.DynamicDataSource">
		<property name="targetDataSources">
			<map key-type="java.lang.String">
				<entry value-ref="dataSource0" key="dataSource0"></entry>
				<entry value-ref="dataSource1" key="dataSource1"></entry>
				<entry value-ref="dataSource2" key="dataSource2"></entry>
				<entry value-ref="dataSource3" key="dataSource3"></entry>
				<entry value-ref="dataSource4" key="dataSource4"></entry>
			</map>
		</property>
	</bean>

	<!-- JdbcTemplate使用动态数据源的配置 -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource">
			<ref bean="dynamicDataSource" />
		</property>
	</bean>

	<!-- DB拦截器，将不同的数据源AOP到不同的方法 -->
	<!-- <aop:config> <aop:aspect id="dataSourceAspect" ref="dataSourceInterceptor"> 
		定义一个切面 <aop:pointcut id="setDataSource" expression="execution(* spring.dao3.impl.DaoUtil.*(..))" 
		/> 定义一个切入点 <aop:before pointcut-ref="setDataSource" method="setDataSource" 
		/> 定义一个前置通知 </aop:aspect> </aop:config> -->



</beans> 
